#! /bin/sh -e
## 06_dautipps.dpatch by Eduard Bloch <blade@debian.org>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Build fixes for 1.9

if [ $# -ne 1 ]; then
    echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
    exit 1
fi
case "$1" in
       -patch) patch -f --no-backup-if-mismatch -p1 < $0;;
       -unpatch) patch -f --no-backup-if-mismatch -R -p1 < $0;;
	*)
		echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
		exit 1;;
esac

exit 0
				    
@DPATCH@
diff -u -r1.69 -r1.70
--- a/Changes	11 Mar 2004 00:44:34 -0000	1.69
+++ b/Changes	11 Mar 2004 20:26:48 -0000	1.70
@@ -1,3 +1,5 @@
+	- fix compile problems without --enable-combining.
+
 2.2  Thu Mar 11 01:41:56 CET 2004
         - implement autocompositing of characters by either using an existing
           precomposed unicode character or by graphical overlay. this is
diff -u -r1.10 -r1.11
--- a/README.configure	6 Mar 2004 00:12:01 -0000	1.10
+++ b/README.configure	11 Mar 2004 20:26:48 -0000	1.11
@@ -1,3 +1,10 @@
+General hint: if you get compile errors, then likely your configuration
+hasn't been tested well. Either try with --enable-everything or use the
+./reconf script as a base for experiments. ./reconf is used by myself,
+so it should generally be a working config. Of course, you should always
+report when a combination doesn't work, so it cnya be fixed. Marc Lehmann
+<rxvt@schmorp.de>.
+
 --enable-everything
         add support for all non-multichoice options listed in "./configure
         --help".  Note that unlike other enable options this is order
diff -u -r1.38 -r1.39
--- a/src/defaultfont.C	5 Mar 2004 21:26:01 -0000	1.38
+++ b/src/defaultfont.C	11 Mar 2004 20:26:49 -0000	1.39
@@ -315,7 +315,9 @@
 
   while (len--)
     {
+#if ENABLE_COMBINING
       compose_char *cc;
+#endif
       text_t t = *text++;
 
       // is it in our linedrawing table?
@@ -354,6 +356,7 @@
           gcv.line_width = 0;
           XChangeGC (d.display->display, GC, GCLineWidth, &gcv);
         }
+#if ENABLE_COMBINING
       else if (IS_COMPOSE (t) && (cc = rxvt_composite[t]))
         {
           rxvt_font *f1 = (*fs)[fs->find_font (cc->c1)];
@@ -368,6 +371,7 @@
               f2->draw (d, x, y, &(t = cc->c2), 1, fg, -1);
             }
         }
+#endif
       else
         switch (t)
           {
diff -u -r1.51 -r1.52
--- a/src/main.C	6 Mar 2004 00:05:01 -0000	1.51
+++ b/src/main.C	11 Mar 2004 20:26:49 -0000	1.52
@@ -58,6 +58,7 @@
     }
 }
 
+#if ENABLE_COMBINING
 class rxvt_composite_vec rxvt_composite;
 
 text_t rxvt_composite_vec::compose (uint32_t c1, uint32_t c2)
@@ -119,8 +120,8 @@
   return len;
 
 }
+#endif
 
-extern struct rxvt_composite_vec rxvt_composite;
 void *
 rxvt_term::operator new (size_t s)
 {
diff -u -r1.54 -r1.56
--- a/src/screen.C	11 Mar 2004 00:53:19 -0000	1.54
+++ b/src/screen.C	11 Mar 2004 20:26:49 -0000	1.56
@@ -890,11 +890,10 @@
             case 'y': c = 0x2264; break; case 'z': c = 0x2265; break; case '{': c = 0x03c0; break;
             case '|': c = 0x2260; break; case '}': c = 0x00a3; break; case '~': c = 0x00b7; break;
           }
-      
 
       if (width > 0)
         {
-#if !UNICODE_3
+#if !UNICODE_3 && ENABLE_COMBINING
           // trim characters we can't store directly :(
           if (c >= 0x10000)
             c = rxvt_composite.compose (c); // map to lower 16 bits
@@ -2840,6 +2839,7 @@
         {
           if (*t == NOCHAR)
             t++;
+#if ENABLE_COMBINING
           else if (IS_COMPOSE (*t))
             {
               int len = rxvt_composite.expand (*t, 0);
@@ -2855,6 +2855,7 @@
 
               ofs += rxvt_composite.expand (*t++, new_selection_text + ofs);
             }
+#endif
           else
             new_selection_text[ofs++] = *t++;
         }
diff -u -r1.56 screen.C
--- a/src/screen.C	11 Mar 2004 20:26:49 -0000	1.56
+++ b/src/screen.C	13 Mar 2004 00:24:10 -0000
@@ -928,7 +928,7 @@
         }
       else if (width == 0)
         {
-#if ENCODING_COMPOSE
+#if ENCODING_COMPOSE && ENABLE_COMBINING
           // handle combining characters
           // we just tag the accent on the previous on-screen character.
           // this is arguably not correct, but also arguably not wrong.
